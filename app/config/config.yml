imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.root_dir%/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id: ~
    fragments: ~
    http_method_override: true

sensio_framework_extra:
    router:      { annotations: true }
    request:     { converters: true, auto_convert: true }
    view:        { annotations: true }
    cache:       { annotations: true }
    security:    { annotations: true }
    psr_message: { enabled: false }
    
# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
knp_menu:
    # use "twig: false" to disable the Twig extension and the TwigRenderer
    twig:
        template: KnpMenuBundle::menu.html.twig
    #  if true, enables the helper for PHP templates
    templating: false
    # the renderer to use, list is also available by default
    default_renderer: twig
# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.root_dir%/data/data.db3'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    username: '%mailer_user%'
    password: '%mailer_password%'

fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: AppBundle\Entity\User
    service:
        mailer: fos_user.mailer.default 
    from_email:
        address:        sagarl3232@gmail.com
        sender_name:    UH AMPED (gmail)    
    resetting:
        email:
            from_email:
                address:        sagarl3232@gmail.com
                sender_name:    UH AMPED (gmail)
ivory_ck_editor:
    default_config: my_config
    configs:
        my_config:
            toolbar: standard
        
        
easy_admin:
    site_name: 'AMPED online (Admin)'
    formats:
        date:     'm/d/Y'
        time:     'H:i'
        datetime: 'm/d/Y g:i A' 
    design:
        menu:
            - User
            - AmpedSession
            - SimplePage
            - Session
            - Login
            - { label: 'Question sets' }
            - TICIcebreakerQuestionSet
            - ABMIcebreakerQuestionSet
            - MAFMiscQuestionSet
            - SelfAssessmentMiscQuestionSet
            - ChangeFormMiscQuestionSet
            - { label: 'Questions' }
            - AmpedTextareaType
            - AmpedChoiceType
    entities:
        User:
            class: AppBundle\Entity\User        
            label: 'Users'
            form:
                fields:
                    - firstName
                    - lastName
                    - username
                    - email
#                    - { property: 'plainPassword', type: 'password', label: 'Password' }
                    - { property: 'plainPassword', help: "A password has been auto-generated for you. When you click 'Save Changes', it will be sent to the email you entered above.", type: 'password', label: 'Password', type_options: { disabled: true, always_empty: true } }
                    - { property: 'dob', type: 'birthday', label: 'Date of birth' }
                    - institution
                    #- students
                    #- { property: 'students', type: 'easyadmin_autocomplete' }
                    #- { property: 'students', type: 'collection', type_options: { entry_type: Symfony\Bridge\Doctrine\Form\Type\EntityType, entry_options: { class: AppBundle\Entity\User }, allow_add: true, allow_delete: true, by_reference: true } , label: 'Students', help: "If this is a mentor you're adding, add the students they will be mentoring" }
                    - { property: mentor, help: "If this is a student you're adding, select their mentor" }
                    - { property: 'roles', label: 'Role for this user', type: 'collection', type_options: { entry_type: Symfony\Component\Form\Extension\Core\Type\ChoiceType, allow_delete: false, allow_add: false, entry_options:  { choices: {  Admin: ROLE_SUPER_ADMIN, Mentor: ROLE_MENTOR, Student: ROLE_PROTEGE } } } }
                    #- { property: 'roles', label: 'Role for this user', type: 'choice', type_options: { choices: {  Admin: ROLE_SUPER_ADMIN, Mentor: ROLE_MENTOR, Student: ROLE_PROTEGE} } }
            edit:
                fields:
                    - '-plainPassword'
            list:
                title: 'Most recent users'
                fields:
                    - id
                    - firstName
                    - lastName
                    - username
                    - email
                    - institution
                    - { property: 'dob', label: 'Date of birth' }
                    - joinDate
                    - enabled
                    - lastLogin
                    #- students
                    - mentor
                    - roles
            show:
                fields:
                    - id
                    - firstName
                    - lastName
                    - username
                    - email
                    - institution
                    - { property: 'dob', label: 'Date of birth' }
                    - joinDate
                    - enabled
                    - lastLogin
                    - mentor
                    - roles

        AmpedSession:
            class: AppBundle\Entity\ampedsession
            label: 'AMPED Session'
 #           controller: AppBundle\Controller\ampedsessionController
            form:
                fields:
                    - { property: 'num', label: 'Session number', help: 'This must be unique amongst all sessions' }
                    - { type: 'group', label: 'Question sets for this session', css_class: 'col-sm-12', help: 'Leave the field blank if you do not want to include that question set in this session'}
                    - { property: 'tic', label: 'Select the "Things in common" icebreaker question set' }
                    - { property: 'abm', label: 'Select the "All about me" icebreaker question set' }
                    - { property: 'MAFQuestions', label: 'Select the mentorship agreement form' }
                    - { property: 'changeFormQuestions', label: 'Select the change plan survey' }
                   # - { property: 'selfAssessmentQuestions', type: 'entity', type_options: { class: 'AppBundle\Entity\SelfAssessmentMiscQuestionSet' } }
                   # - { property: 'selfAssessmentQuestions', label: 'Select the self-assessment question set', type: 'easyadmin_autocomplete', type_options: { class: 'AppBundle\Entity\SelfAssessmentMiscQuestionSet' } }
                    - { type: 'group', label: 'Self-assessment question sets' }
                    - { property: 'selfAssessmentBehaviourQuestions', label: 'Emotional' }
                    - { property: 'selfAssessmentAcademicQuestions', label: 'Academic' }
                    - { property: 'selfAssessmentSocialQuestions', label: 'Social' }                    
                    - { property: 'selfAssessmentSelfRegQuestions', label: 'Self-regulation' }
                    - { type: 'group', label: 'Informational pages' }                    
                    - { property: 'pages', label: 'Select the informational pages for this session', help: 'These pages will appear before any question sets or modules in the navigation menu under this session, and students will see the first page when they resume a session' } 
                    #, type: 'collection', type_options: { entry_type: Symfony\Bridge\Doctrine\Form\Type\EntityType, entry_options: { class: AppBundle\Entity\SimplePage }, allow_add: true, allow_delete: true } }
                    - { type: 'group', label: 'Include other surveys' }
                    - { property: 'has7Words', label: 'Include the "7 Words" icebreaker activity in this session' }
                    - { property: 'hasMeShield', label: 'Include the "Me Shield" icebreaker activity in this session' }
                    - { property: 'hasTimeTravel', label: 'Include the "Time traveling" icebreaker activity in this session' }
                    - { property: 'hasBackpack', label: 'Include the "Backpack scavenger hunt" icebreaker activity in this session' }
                    - { property: 'hasBackToBack', label: 'Include the "Back to back drawings" icebreaker activity in this session' }                    
                    #- { property: 'hasOrgChart', label: 'Include the Organization Chart form in this session' }
                    - { property: 'hasGoalSheet', label: 'Include the Goal Sheet in this session' }                    
                    - { property: 'hasModules' , label: 'Students should complete a module in this session' }
            new:
                title: 'Add a new AMPED session'
            list:
                title: 'Sessions in AMPED'
                fields:
                    - { property: 'num', label: 'Session number' }
                    - createdAt
                    - createdBy
                    - pages
                actions:
                    - { name: 'new', label: 'Add' }                    
        SimplePage:
            class: AppBundle\Entity\SimplePage
            label: 'Session information pages'
            form:
                fields:
                    - title
                    - {property: 'description', type: 'ckeditor' }
            list:
                title: 'All pages'
                fields:
                    - title
                actions:
                    - { name: 'new', label: 'Add page' }
            new:
                title: 'Create new page'                    
        Session:
            class: AppBundle\Entity\Session
            label: 'Sessions in progress'
            disabled_actions: ['new', 'delete']
            list:
                title: 'All mentoring sessions in progress'
                fields:
                    - student
                    - mentor
                    - { property: 'ampedSession', label: 'Session' }
                    - start
                    - end
            edit:
                title: 'Edit session in progress'
                fields:
                    - start
                    - end
        Login:
            class: AppBundle\Entity\Login
            label: 'Login and logout'
            disabled_actions: ['new','edit', 'delete']
            list:
                title: 'All successful attempts'
                fields:
                    - user
                    - { property: 'ts', label: 'Timestamp' }
                    - { property: status, type: 'boolean', label: 'Login: YES | Logout: NO' }
        TICIcebreakerQuestionSet:
            class: AppBundle\Entity\TICIcebreakerQuestionSet
            #controller: AppBundle\Controller\TICIcebreakerQuestionSetAdminController
            label: 'Things in common'
            list:
                title: 'Question sets for "Things in common" icebreaker'
                actions:
                    - { name: 'new', label: 'Add question set' }
                fields:
                    - name
                    - createdAt
                    - createdBy
                    - questions
            form:
                title: 'New question set'
                fields:
                    - name
                    #- { property: 'questions', help: 'Add some text entry questions to this set', type: 'collection', type_options: { entry_type: Symfony\Bridge\Doctrine\Form\Type\EntityType, entry_options: { class: AppBundle:AmpedTextareaType }, allow_add: true, allow_delete: true, by_reference: true } }
                    - { property: 'questions', type: 'easyadmin_autocomplete', type_options: { class: 'AppBundle\Entity\AmpedTextareaType' } }
                    #- questions
            
        AmpedChoiceType:
            class: AppBundle\Entity\AmpedChoiceType
            label: 'Rating questions'
            form:
                fields:
                    - { property: text, label: 'Question' , help: 'You are limited to 255 characters' }
                    - { property: groupType, label: 'Style', type: 'choice', type_options: { choices: 
                        {
                        'Grades: A,B,C,D,F': 1,
                        '1-10: No grouping': 2,
                        '1-10: Not at all, Somewhat, Very': 3,
                        '0-10: Definitely Not, Probably Not, Maybe, Probably, Definitely': 4
                        }
                      } }
            list:
                title: 'All rating-type questions'
                actions:
                    - { name: 'new', label: 'Add a new question' }
                fields:
                    - text
            new:
                title: 'Create new rating-type question'
            edit:
                title: 'Edit rating-type question'                
                    
        AmpedTextareaType:
            class: AppBundle\Entity\AmpedTextareaType
            label: 'Text entry questions'
            form:
                title: 'New regular text input question'
                form_options: { validation_groups: ['Default'] }
                fields:
                    - { property: text, label: 'Question' , help: 'You are limited to 255 characters' }
            list:   
                title: 'All text-entry questions'
                fields:
                    - text
                actions:
                    - { name: 'new', label: 'Add a new question' }
        MAFMiscQuestionSet:
            class: AppBundle\Entity\MAFMiscQuestionSet
            label: 'Mentorship agreement form'
            list:
                title: 'Question sets for Mentorship Agreement Forms'
                actions:
                    - { name: 'new', label: 'Add question set' }
                fields:
                    - name
                    - createdAt
                    - createdBy
                    - questions
            form:
                title: 'New question set'
                fields:
                    - name
                    #- { property: 'questions', help: 'Add some text entry questions to this set', type: 'collection', type_options: { entry_type: Symfony\Bridge\Doctrine\Form\Type\EntityType, entry_options: { class: AppBundle:AmpedTextareaType }, allow_add: true, allow_delete: true, by_reference: true } }
                    - { property: 'questions', type: 'easyadmin_autocomplete', type_options: { class: 'AppBundle\Entity\AmpedTextareaType' } }
                    #- questions
        ABMIcebreakerQuestionSet:
            class: AppBundle\Entity\ABMIcebreakerQuestionSet
            label: 'All about me'
            list:
                title: 'Question sets for the "All about me" icebreaker'
                actions:
                    - { name: 'new', label: 'Add question set' }
                fields:
                    - name
                    - createdAt
                    - createdBy
                    - questions
            form:
                title: 'New question set'
                fields:
                    - name
                    #- { property: 'questions', help: 'Add some text entry questions to this set', type: 'collection', type_options: { entry_type: Symfony\Bridge\Doctrine\Form\Type\EntityType, entry_options: { class: AppBundle:AmpedTextareaType }, allow_add: true, allow_delete: true, by_reference: true } }
                    - { property: 'questions', type: 'easyadmin_autocomplete', type_options: { class: 'AppBundle\Entity\AmpedTextareaType' } }            
        SelfAssessmentMiscQuestionSet:
            class: AppBundle\Entity\SelfAssessmentMiscQuestionSet
            label: 'Self-Assessment'
            list:
                title: 'Question sets for self-assessment surveys'
                actions:
                    - { name: 'new', label: 'Add question set' }
                fields:
                    - name
                    - createdAt
                    - createdBy
                    - questions
            form:
                title: 'New question set'
                fields:
                    - name
                    - questions
                    #- { property: 'questions', help: 'Add some text entry questions to this set', type: 'collection', type_options: { entry_type: Symfony\Bridge\Doctrine\Form\Type\EntityType, entry_options: { class: AppBundle:AmpedTextareaType }, allow_add: true, allow_delete: true, by_reference: true } }
                    #- { property: 'questions', type: 'easyadmin_autocomplete', type_options: { class: 'AppBundle\Entity\QuestionType' } }
        QuestionType:
            class: AppBundle\Entity\QuestionType
            show:
                max_results: 100
        ChangeFormMiscQuestionSet:
            class: AppBundle\Entity\ChangeFormMiscQuestionSet
            label: 'Change plan surveys'
            list:
                title: 'Question sets for Change Plan Surveys'
                actions:
                    - { name: 'new', label: 'Add question set' }
                fields:
                    - name
                    - createdAt
                    - createdBy
                    - questions
            form:
                title: 'New question set'
                fields:
                    - name
                    #- { property: 'questions', help: 'Add some text entry questions to this set', type: 'collection', type_options: { entry_type: Symfony\Bridge\Doctrine\Form\Type\EntityType, entry_options: { class: AppBundle:AmpedTextareaType }, allow_add: true, allow_delete: true, by_reference: true } }
                    - { property: 'questions', type: 'easyadmin_autocomplete', type_options: { class: 'AppBundle\Entity\AmpedChoiceType' } }